[gd_scene load_steps=38 format=2]

[ext_resource path="res://Terrain.cs" type="Script" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 10.0

[sub_resource type="VisualShaderNodeScalarConstant" id=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=3]
constant = -5.0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 6

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "camera"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 999.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 999.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 999.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 1.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=25]
constant = Color( 0.656523, 0.656523, 0.656523, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=26]
constant = Color( 0.105882, 0.513726, 0.164706, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]

[sub_resource type="VisualShaderNodeVectorOp" id=29]

[sub_resource type="VisualShaderNodeTransformVecMult" id=30]

[sub_resource type="VisualShaderNodeColorConstant" id=31]
constant = Color( 0.0550586, 0.328398, 0.0753455, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=32]
constant = Color( 0.302734, 0.184737, 0.00946045, 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]

[sub_resource type="VisualShader" id=34]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorDecompose:7
	float n_out7p0 = n_out4p0.x;
	float n_out7p1 = n_out4p0.y;
	float n_out7p2 = n_out4p0.z;

// Scalar:11
	float n_out11p0 = 10.000000;

// ScalarOp:14
	float n_out14p0 = n_out7p1 - n_out11p0;

// ScalarOp:17
	float n_in17p1 = 0.00000;
	float n_out17p0 = max(n_out14p0, n_in17p1);

// ScalarOp:20
	float n_in20p1 = 999.00000;
	float n_out20p0 = n_out17p0 * n_in20p1;

// ScalarOp:23
	float n_in23p1 = 1.00000;
	float n_out23p0 = min(n_out20p0, n_in23p1);

// Color:34
	vec3 n_out34p0 = vec3(0.656523, 0.656523, 0.656523);
	float n_out34p1 = 1.000000;

// VectorOp:30
	vec3 n_out30p0 = vec3(n_out23p0) * n_out34p0;

// Scalar:12
	float n_out12p0 = 0.000000;

// ScalarOp:15
	float n_out15p0 = n_out7p1 - n_out12p0;

// ScalarOp:18
	float n_in18p1 = 0.00000;
	float n_out18p0 = max(n_out15p0, n_in18p1);

// ScalarOp:21
	float n_in21p1 = 999.00000;
	float n_out21p0 = n_out18p0 * n_in21p1;

// ScalarOp:24
	float n_in24p1 = 1.00000;
	float n_out24p0 = min(n_out21p0, n_in24p1);

// ScalarOp:27
	float n_out27p0 = n_out24p0 - n_out23p0;

// Color:35
	vec3 n_out35p0 = vec3(0.105882, 0.513726, 0.164706);
	float n_out35p1 = 1.000000;

// VectorOp:31
	vec3 n_out31p0 = vec3(n_out27p0) * n_out35p0;

// VectorOp:36
	vec3 n_out36p0 = n_out30p0 + n_out31p0;

// Scalar:13
	float n_out13p0 = -5.000000;

// ScalarOp:16
	float n_out16p0 = n_out7p1 - n_out13p0;

// ScalarOp:19
	float n_in19p1 = 0.00000;
	float n_out19p0 = max(n_out16p0, n_in19p1);

// ScalarOp:22
	float n_in22p1 = 999.00000;
	float n_out22p0 = n_out19p0 * n_in22p1;

// ScalarOp:25
	float n_in25p1 = 1.00000;
	float n_out25p0 = min(n_out22p0, n_in25p1);

// ScalarOp:28
	float n_out28p0 = n_out25p0 - n_out24p0;

// Color:5
	vec3 n_out5p0 = vec3(0.055059, 0.328398, 0.075346);
	float n_out5p1 = 1.000000;

// VectorOp:32
	vec3 n_out32p0 = vec3(n_out28p0) * n_out5p0;

// VectorOp:37
	vec3 n_out37p0 = n_out36p0 + n_out32p0;

// ScalarOp:29
	float n_in29p0 = 1.00000;
	float n_out29p0 = n_in29p0 - n_out25p0;

// Color:6
	vec3 n_out6p0 = vec3(0.302734, 0.184737, 0.009460);
	float n_out6p1 = 1.000000;

// VectorOp:33
	vec3 n_out33p0 = vec3(n_out29p0) * n_out6p0;

// VectorOp:38
	vec3 n_out38p0 = n_out37p0 + n_out33p0;

// Output:0
	ALBEDO = n_out38p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 570.08, -131.07 )
nodes/fragment/0/position = Vector2( 2680, 220 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -400, 200 )
nodes/fragment/3/node = SubResource( 20 )
nodes/fragment/3/position = Vector2( -400, 320 )
nodes/fragment/4/node = SubResource( 30 )
nodes/fragment/4/position = Vector2( -180, 220 )
nodes/fragment/5/node = SubResource( 31 )
nodes/fragment/5/position = Vector2( 1160, 20 )
nodes/fragment/6/node = SubResource( 32 )
nodes/fragment/6/position = Vector2( 1160, 100 )
nodes/fragment/7/node = SubResource( 33 )
nodes/fragment/7/position = Vector2( 140, 220 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 160, 360 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 160, 420 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 160, 480 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 420, 200 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 420, 320 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 420, 460 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 600, 200 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 600, 320 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 600, 460 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 800, 200 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 800, 320 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 800, 460 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( 1000, 200 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( 1000, 320 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 1000, 460 )
nodes/fragment/27/node = SubResource( 17 )
nodes/fragment/27/position = Vector2( 1200, 320 )
nodes/fragment/28/node = SubResource( 18 )
nodes/fragment/28/position = Vector2( 1200, 460 )
nodes/fragment/29/node = SubResource( 19 )
nodes/fragment/29/position = Vector2( 1200, 600 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( 1540, 200 )
nodes/fragment/31/node = SubResource( 22 )
nodes/fragment/31/position = Vector2( 1540, 320 )
nodes/fragment/32/node = SubResource( 23 )
nodes/fragment/32/position = Vector2( 1540, 440 )
nodes/fragment/33/node = SubResource( 24 )
nodes/fragment/33/position = Vector2( 1540, 560 )
nodes/fragment/34/node = SubResource( 25 )
nodes/fragment/34/position = Vector2( 1160, -140 )
nodes/fragment/35/node = SubResource( 26 )
nodes/fragment/35/position = Vector2( 1160, -60 )
nodes/fragment/36/node = SubResource( 27 )
nodes/fragment/36/position = Vector2( 1780, 240 )
nodes/fragment/37/node = SubResource( 28 )
nodes/fragment/37/position = Vector2( 2020, 360 )
nodes/fragment/38/node = SubResource( 29 )
nodes/fragment/38/position = Vector2( 2260, 500 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 7, 0, 7, 1, 14, 0, 11, 0, 14, 1, 13, 0, 16, 1, 12, 0, 15, 1, 7, 1, 15, 0, 7, 1, 16, 0, 14, 0, 17, 0, 16, 0, 19, 0, 15, 0, 18, 0, 19, 0, 22, 0, 18, 0, 21, 0, 17, 0, 20, 0, 22, 0, 25, 0, 21, 0, 24, 0, 20, 0, 23, 0, 24, 0, 27, 0, 25, 0, 28, 0, 24, 0, 28, 1, 25, 0, 29, 1, 23, 0, 27, 1, 23, 0, 30, 0, 27, 0, 31, 0, 28, 0, 32, 0, 29, 0, 33, 0, 34, 0, 30, 1, 35, 0, 31, 1, 5, 0, 32, 1, 6, 0, 33, 1, 30, 0, 36, 0, 31, 0, 36, 1, 36, 0, 37, 0, 32, 0, 37, 1, 37, 0, 38, 0, 33, 0, 38, 1, 38, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=35]
shader = SubResource( 34 )

[sub_resource type="PlaneMesh" id=36]
material = SubResource( 35 )
size = Vector2( 500, 500 )
subdivide_width = 500
subdivide_depth = 500

[node name="Surface" type="StaticBody"]
collision_layer = 3
collision_mask = 3

[node name="Terrain" type="MeshInstance" parent="."]
mesh = SubResource( 36 )
material/0 = null
script = ExtResource( 1 )
